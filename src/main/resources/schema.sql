create table if not exists directors (
    id bigint generated by default as identity primary key,
    name varchar(255)
);
create table if not exists genres (
    id bigint primary key,
    name varchar(255) NOT NULL
);
create table if not exists mpa (
    id bigint primary key,
    name varchar(255) NOT NULL,
    description varchar(255)
);
create table if not exists films (
    id bigint generated by default as identity primary key,
    name varchar(255) NOT NULL,
    description varchar(200),
    release_date date,
    duration integer,
    mpa bigint NOT NULL,
    foreign key (mpa) references mpa(id)
);
create table if not exists users (
    id bigint generated by default as identity primary key,
    name varchar(255) NOT NULL,
    email varchar(255)NOT NULL UNIQUE,
    login varchar(255),
    birthday date
);
create table if not exists friendship (
    user_id bigint NOT NULL,
    friend_id bigint NOT NULL,
    accepted boolean default false,
    foreign key (user_id) references users(id),
    foreign key (friend_id) references users(id)
);
create table if not exists likes (
    user_id bigint NOT NULL,
    film_id bigint NOT NULL,
    foreign key (user_id) references users(id),
    foreign key (film_id) references films(id)
);
create table if not exists film_genre (
    film_id bigint NOT NULL,
    genre_id bigint NOT NULL,
    foreign key (film_id) references films(id),
    foreign key (genre_id) references genres(id)
);
create table if not exists film_director (
    film_id bigint,
    director_id bigint,
    foreign key (film_id) references films(id),
    foreign key (director_id) references directors(id)
);
create table if not exists reviews (
    id bigint generated by default as identity primary key,
    user_id bigint,
    film_id bigint,
    content varchar(2048),
    is_positive boolean,
    useful integer default 0,
    foreign key (user_id) references users(id),
    foreign key (film_id) references films(id)
);
create table if not exists review_user (
    review_id bigint,
    user_id bigint,
    val integer,
    foreign key (review_id) references reviews(id),
    foreign key (user_id) references users(id)
);
create table if not exists feed (
    event_id bigint generated by default as identity primary key,
    timestamp bigint,
    user_id bigint,
    event_type varchar(64),
    operation varchar(64),
    entity_id bigint,
    foreign key (user_id) references users(id)
);